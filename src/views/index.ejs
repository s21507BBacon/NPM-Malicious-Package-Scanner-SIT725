<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>SecureMyGit</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="/css/style.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
  </head>

  <body>
     <!-- Display the message if present -->
    <% if (message) { %>
        <p class="alert-message"><%= message %></p>
    <% } %>

    <!-- Navi Bar -->
    <nav id="top-navbar" class="navbar navbar-dark bg-dark fixed-top">
      <div class="container-fluid justify-content-center">
        <a class="navbar-brand" href="#introduction">SecureMyGit</a>
        <button class="navbar-toggler" type="button" data-bs-toggle="offcanvas" data-bs-target="#offcanvasNavbar" aria-controls="offcanvasNavbar" aria-label="Toggle navigation">
          <span class="navbar-toggler-icon"></span>
        </button>
        <div class="offcanvas offcanvas-end text-bg-dark" tabindex="-1" id="offcanvasNavbar" aria-labelledby="offcanvasNavbarLabel">
          <div class="offcanvas-header">
            <button type="button" class="btn-close btn-close-white" data-bs-dismiss="offcanvas" aria-label="Close"></button>
          </div>
          <div class="offcanvas-body">
            <ul class="navbar-nav justify-content-end flex-grow-1 pe-3">
              <li class="nav-item">
                <a class="nav-link" href="#">Sign In</a>
              </li> 
              <li class="nav-item">
                <a class="nav-link" href="./view">PackageList</a>
              </li>
              <li class="nav-item">
                <a class="nav-link" href="#" data-bs-toggle="offcanvas" data-bs-target="#offcanvasWithBothOptions" aria-controls="offcanvasWithBothOptions" id="Update">New Update
                </a>
              </li>
              <li class="nav-item">
                <a class="nav-link" href="#">Community</a>
              </li>
              <li class="nav-item">
                <a class="nav-link" href="./admin">Admin Page</a> 
              </li>
              <li class="nav-item">
                <a class="nav-link" href="#">About SecureMyGit</a>
              </li>
            </ul>
          </div>
        </div>
      </div>
    </nav>

    <div class="offcanvas offcanvas-start" data-bs-scroll="true" tabindex="-1" id="offcanvasWithBothOptions" aria-labelledby="offcanvasWithBothOptionsLabel">
      <div class="offcanvas-header">
        <h5 class="offcanvas-title" id="offcanvasWithBothOptionsLabel">Update</h5>
        <button type="button" class="btn-close" data-bs-dismiss="offcanvas" aria-label="Close"></button>
      </div>
      <div class="offcanvas-body">
        <!-- Content for Update -->
      </div>
    </div>

    <div class="banner">
      <div class="container">
        <h1>SecureMyGit</h1>
      </div>
    </div>

    <!-- User input -->
    <div class="container mt-5">
      <form  id="form1">
        <div class="row">
          <div class="col-md-10">
            <input type="text" class="form-control" id="repoAddress" name="repoAddress" placeholder="Enter Repo Address" aria-label="Repo Address">
          </div>
          <div class="col-md-2">
            <button class="btn btn-primary w-100" type="submit" id="button1">Upload</button>
          </div>
        </div>

        <div class="row mt-3">
          <div class="col-md-12 d-flex align-items-center">
            <label class="form-check-label me-3">Select Repo Type:</label>
            <div class="form-check form-check-inline">
              <input class="form-check-input" type="radio" name="repoType" id="publicRepo" value="public" checked>
              <label class="form-check-label" for="publicRepo">Public</label>
            </div>
            <div class="form-check form-check-inline">
              <input class="form-check-input" type="radio" name="repoType" id="privateRepo" value="private">
              <label class="form-check-label" for="privateRepo">Private</label>
            </div>
          </div>
        </div>

        <div class="row mt-3" id="keyInputGroup" style="display: none;">
          <div class="col-md-8">
            <input type="text" class="form-control" id="repoKey" name="repoKey" placeholder="Enter Repo Key" aria-label="Repo Key">
          </div>
        </div>
      </form>
    </div>

    <script>
      // Toggles visibility of Repo Key input

     
      
  function uploadRepo() {
    const repoAddress = document.getElementById('repoAddress').value;
    const repoType = document.querySelector('input[name="repoType"]:checked').value;
    const repoKey = document.getElementById('repoKey').value;

    const data = { repoAddress, repoType, repoKey };
    const arrayPack=[];
    fetch('/api/fetch-package-json-updates', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify(data),
    })
        .then(response => response.json())
        .then(result => {
            console.log('Success:', result);
            const feedbackBox = document.getElementById('feedbackBox');

            // Clear previous results
            feedbackBox.innerHTML = '';

            // Check if package.json and dependencies are present
            if (result.packageJson ) {
                const dependencies = result.packageJson;
                //arrayPack=dependencies;

                // Create a list to display dependencies
                const ul = document.createElement('ul');
                for (const [dep, version] of Object.entries(dependencies)) {
                    const li = document.createElement('li');
                    li.textContent = `${dep}: ${version}`;
                    ul.appendChild(li);
                }
                
                // Append the list to the feedback box
                feedbackBox.appendChild(ul);
                // Extract only the package names from the array
                const list = Array.from(dependencies);

console.log("checking here",list,dependencies);
                scanForMaliciousPackages(list)
    .then(maliciousPackages => {
        if (maliciousPackages.length > 0) {
            console.log('Malicious packages detected:', maliciousPackages);
        } else {
            console.log('No malicious packages detected.');
        }
    })
    .catch(error => {
        console.error('Scan failed:', error);
    });

            } else {
                // Handle the case where there are no dependencies
                const message = document.createElement('p');
                message.textContent = 'No dependencies found';
                feedbackBox.appendChild(message);
            }
        })
        .catch(error => {
            console.error('Error:', error);
            const feedbackBox = document.getElementById('feedbackBox');
            feedbackBox.innerHTML = ''; // Clear previous results
            const errorMessage = document.createElement('p');
            errorMessage.className = 'error'; // Add a class for error styling if needed
            errorMessage.textContent = 'Error fetching package.json: ' + error.message;
            feedbackBox.appendChild(errorMessage);
        });
      };

     
      document.getElementById('publicRepo').addEventListener('change', toggleKeyInput);
      document.getElementById('privateRepo').addEventListener('change', toggleKeyInput);
      document.getElementById("button1").addEventListener("click", function(event){
      event.preventDefault()
      });
      document.getElementById("button1").addEventListener("click",uploadRepo);
      function toggleKeyInput() {
        const privateRepo = document.getElementById('privateRepo').checked;
        const keyInputGroup = document.getElementById('keyInputGroup');
        keyInputGroup.style.display = privateRepo ? 'block' : 'none';
      };
      // Function to scan for malicious packages by names using GET request
      async function scanForMaliciousPackages(packageJson) {
    try {
        // Extract package names from package.json
        const packageNames = (packageJson);

        // Prepare the data for the POST request
        const data = { packages: packageNames };

        // Perform the POST request using fetch
        const response = await fetch('/api/malicious-package-names', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify(data),
        });
        const scanBox = document.getElementById('ScanBox');
        // Process the response
        if (response.ok) {
            const result = await response.json();
            if (result.success && result.data.length > 0) {
                console.log('Malicious packages found:', result.data);
                scanBox.innerHTML=JSON.stringify('Malicious packages found:')+JSON.stringify( result.data);
               
                return result.data;  // Return the malicious packages
            } else {
                console.log('No malicious packages found.');
                scanBox.innerHTML=('No Malicious packages found:');
                return [];
            }
        } else {
            console.error('Failed to scan malicious packages:', response.statusText);
            return [];
        }
    } catch (error) {
        console.error('Error during the scan:', error);
        throw error;
    }
}
    </script>
    
    

    <!-- Feedback box for server messages -->
    <div class="container-fluid mt-5">
      <div class="feedback-box" id="feedbackBox">
        <!-- Content fed back by the server will appear here -->
        <% if (typeof message !== 'undefined') { %>
          <p><%= message %></p>
        <% } %>
      </div>
      <div class="feedback-box" id="ScanBox"></div>
        <!-- Content fed back by the server will appear here -->
        <% if (typeof message !== 'undefined') { %>
          <p><%= message %></p>
        <% } %>
      </div>
    </div>

    <!-- Footer -->
    <footer class="container-fluid p-4 bg-dark text-white">
      <div class="row">
        <div class="col-md-4 col-12">
          <ul class="list-unstyled">
            <li><a href="#service1" class="footer-link">Cooperate</a></li>
            <li><a href="#service2" class="footer-link">Join us</a></li>
          </ul>
        </div>
        <div class="col-md-4 col-12">
          <h5>Contact</h5>
          <p>221 Burwood Hwy Deakin University, Burwood VIC 3125<br>Melbourne, Australia</p>
          <p>Email: <a href="mailto:info@SecureMyGit.com" class="footer-link">info@SecureMyGit.com</a></p>
          <p>Phone: <a href="tel:+1234567890" class="footer-link">(03)0000 0000</a></p>
        </div>
        <div class="col-md-4 col-12">
          <h5>Follow Us</h5>
          <a href="https://facebook.com" class="btn btn-default me-2 social-btn">
            <i class="fab fa-facebook"></i> Facebook
          </a>
          <a href="https://twitter.com" class="btn btn-default me-2 social-btn">
            <i class="fab fa-twitter"></i> Twitter
          </a>
          <a href="https://instagram.com" class="btn btn-default social-btn">
            <i class="fab fa-instagram"></i> Instagram
          </a>
        </div>
      </div>
      <div class="text-center mt-4">
        <p>© 2024 SecureMyGit</p>
      </div>
    </footer>
  </body>
</html>